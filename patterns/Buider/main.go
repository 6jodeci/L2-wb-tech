// Релизация паттерна "Строитель" на примере проекта "Фабрика производста компьютеров"
// Основная функция приходится на создание пошаговой конфигурации и в эту конфигурацию передается соответсвующий сборщик
package main

import "builder-pattern/pkg"

// клиентский код
func main() {
	// добавление двух видов комплектации которые возможны на заводе
	asusCollctor := pkg.GetCollector("asus")
	hpCollctor := pkg.GetCollector("hp")
	// создание базового завода с выбранной по умолчанию комплектацией
	factory := pkg.NewFactory(asusCollctor)
	// у фабрики создаем компьютер в базовой комлектации (CreateComputer стандарный метод который создает компьютер в базовой комплектации)
	asusComputer := factory.CreateComputer()
	// вывод информации о комплектации
	asusComputer.Print()

	// если мы решили производить компьютеры другого бренда с нужной комлектацией
	// конфигурируем новую сборку и передаем соответсвующего комплектовщика после чего создаем компьютер
	factory.SetCollector(hpCollctor)
	hpComputer := factory.CreateComputer()
	// выводим информацию о компьютере другого бренда
	hpComputer.Print()

	// после чего опять можно все вернуть
	// factory.SetCollector(asusCollctor)
	// опять изменяем конфигурацию сборке и вернулись к модели асус
	// pc := factory.CreateComputer()
	//  вывод информации о компьютере другого бренда
	// pc.Print()
}
